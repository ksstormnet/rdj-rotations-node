generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model carts {
  ID   Int    @id @unique(map: "ID") @default(autoincrement())
  name String @db.VarChar(250)
}

model carts_list {
  ID       Int    @id @unique(map: "ID") @default(autoincrement())
  pID      Int
  swID     Int
  swButton Int
  color    String @db.VarChar(100)
}

model category {
  ID   Int    @id @default(autoincrement())
  name String @unique(map: "name") @db.VarChar(100)
}

model events {
  ID      Int             @id @default(autoincrement())
  type    Int
  time    String          @db.VarChar(20)
  name    String          @db.VarChar(200)
  date    DateTime?       @default(dbgenerated("('2002-01-01')")) @db.Date
  day     String?         @default("&") @db.VarChar(30)
  hours   String?         @default("&") @db.VarChar(100)
  data    String?         @db.Text
  enabled events_enabled? @default(True)
  catID   Int             @default(0)
  smart   Int             @default(0)
}

model events_categories {
  ID   Int    @id @default(autoincrement())
  name String @db.VarChar(200)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model genre {
  id   Int    @default(autoincrement())
  name String @db.VarChar(50)

  @@index([id], map: "id")
  @@ignore
}

model history {
  ID              Int       @id @default(autoincrement())
  trackID         Int
  date_played     DateTime? @default(dbgenerated("('2002-01-01 00:00:01')")) @db.DateTime(0)
  song_type       Int
  id_subcat       Int
  id_genre        Int
  duration        Float
  artist          String    @db.VarChar(200)
  original_artist String    @db.VarChar(200)
  title           String    @db.VarChar(200)
  album           String    @db.VarChar(200)
  composer        String    @db.VarChar(200)
  label           String    @db.VarChar(250)
  year            String    @default("1900") @db.VarChar(4)
  track_no        Int       @default(0)
  disc_no         Int       @default(0)
  publisher       String    @db.VarChar(200)
  copyright       String    @db.VarChar(200)
  isrc            String    @db.VarChar(200)
  listeners       Int?

  @@index([artist], map: "artist")
  @@index([date_played], map: "date_played")
  @@index([title], map: "title")
}

model playlists {
  ID   Int    @id @unique(map: "ID") @default(autoincrement())
  name String @unique(map: "name") @db.VarChar(200)
}

model playlists_list {
  ID      Int                    @id @default(autoincrement())
  pID     Int
  sID     Int
  cstart  Float
  cnext   Float
  cend    Float
  fin     Float
  fout    Float
  swID    Int
  swplay  Float
  vtID    Int
  vtplay  Float
  swfirst playlists_list_swfirst
  ord     Int

  @@index([ID], map: "ID")
}

model queuelist {
  ID                 Int       @id @default(autoincrement())
  songID             Int       @default(0)
  ETA                DateTime? @default(dbgenerated("('2002-01-01 00:00:01')")) @db.DateTime(0)
  duration           Float     @default(0.00000)
  artist             String    @db.VarChar(250)
  associated_artists String    @default("") @db.VarChar(250)
  title              String    @db.VarChar(250)
  album              String    @db.VarChar(250)
  swID               Int       @default(-1)
  swPlay             Float     @default(0.00000)
  vtID               Int       @default(-1)
  vtPlay             Float     @default(0.00000)
}

model requests {
  ID        Int      @id @default(autoincrement())
  songID    Int
  username  String   @default("Anomymous") @db.VarChar(200)
  userIP    String   @db.VarChar(50)
  message   String?  @db.Text
  requested DateTime @db.DateTime(0)
  played    Int      @default(0)
}

model rotations {
  ID   Int    @id @default(autoincrement())
  name String @unique(map: "name") @db.VarChar(200)
}

model rotations_history {
  id          Int       @id @default(autoincrement())
  rotation_id Int?
  hour_of_day Int?
  day_of_week Int?
  played_at   DateTime? @default(now()) @db.Timestamp(0)

  @@index([hour_of_day, day_of_week], map: "idx_rotations_history_hour_day")
  @@index([played_at], map: "idx_rotations_history_played_at")
  @@index([rotation_id], map: "idx_rotations_history_rotation")
}

model rotations_list {
  ID                Int     @id @default(autoincrement())
  pID               Int
  catID             Int
  subID             Int
  genID             Int
  mood              String? @db.VarChar(250)
  gender            String? @db.VarChar(250)
  language          String? @db.VarChar(250)
  start_type        Int     @default(0)
  end_type          Int     @default(0)
  selType           Int
  sweeper           Int
  repeatRule        String
  ord               Int
  data              String  @db.Text
  track_separation  Int     @default(0)
  artist_separation Int     @default(0)
  title_separation  Int     @default(0)
  album_separation  Int     @default(0)
  advanced          String? @db.Text
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model settings {
  source  String @db.VarChar(150)
  setting String @db.VarChar(150)
  value   String @db.VarChar(250)

  @@ignore
}

model songs {
  ID                 Int       @id @default(autoincrement())
  path               String    @unique(map: "path") @db.VarChar(250)
  enabled            Int       @default(0)
  date_added         DateTime? @default(dbgenerated("('2002-01-01 00:00:01')")) @db.DateTime(0)
  date_modified      DateTime? @default(dbgenerated("('2002-01-01 00:00:01')")) @db.DateTime(0)
  date_played        DateTime? @default(dbgenerated("('2002-01-01 00:00:01')")) @db.DateTime(0)
  artist_played      DateTime? @default(dbgenerated("('2002-01-01 00:00:01')")) @db.DateTime(0)
  album_played       DateTime? @default(dbgenerated("('2002-01-01 00:00:01')")) @db.DateTime(0)
  title_played       DateTime? @default(dbgenerated("('2002-01-01 00:00:01')")) @db.DateTime(0)
  count_played       Int       @default(0)
  play_limit         Int       @default(0)
  limit_action       Int       @default(0)
  start_date         DateTime? @default(dbgenerated("('2002-01-01 00:00:01')")) @db.DateTime(0)
  end_date           DateTime? @default(dbgenerated("('2002-01-01 00:00:01')")) @db.DateTime(0)
  startEvent         Int       @default(-1)
  endEvent           Int       @default(-1)
  song_type          Int
  id_subcat          Int
  id_genre           Int
  weight             Float     @default(50.0)
  duration           Float
  original_duration  Float
  cue_times          String    @default("&") @db.VarChar(250)
  precise_cue        Int       @default(0)
  fade_type          Int       @default(0)
  start_type         Int       @default(0)
  end_type           Int       @default(0)
  mix_type           Int       @default(0)
  mood               String    @default("Not Set") @db.VarChar(150)
  gender             String    @default("Not Set") @db.VarChar(150)
  lang               String    @default("Not Set") @db.VarChar(150)
  rating             Int       @default(0)
  loudness           Float     @default(1.00)
  bs1770             Float     @default(0.00)
  overlay            Int       @default(0)
  artist             String    @db.VarChar(250)
  associated_artists String    @default("") @db.VarChar(250)
  original_artist    String    @db.VarChar(250)
  title              String    @db.VarChar(250)
  album              String    @db.VarChar(250)
  composer           String    @db.VarChar(250)
  label              String    @db.VarChar(250)
  year               String    @default("1900") @db.VarChar(4)
  track_no           Int       @default(0)
  disc_no            Int       @default(0)
  publisher          String    @db.VarChar(250)
  copyright          String    @db.VarChar(250)
  isrc               String    @db.VarChar(250)
  bpm                Float
  comments           String?   @db.Text
  sweepers           String?   @db.VarChar(250)
  image              String    @default("no_image.jpg") @db.VarChar(250)
  buy_link           String    @default("http://") @db.VarChar(250)
  url1               String    @default("http://") @db.VarChar(250)
  url2               String    @default("http://") @db.VarChar(250)
  tdate_played       DateTime? @default(dbgenerated("('2002-01-01 00:00:01')")) @db.DateTime(0)
  tartist_played     DateTime? @default(dbgenerated("('2002-01-01 00:00:01')")) @db.DateTime(0)
  ttitle_played      DateTime? @default(dbgenerated("('2002-01-01 00:00:01')")) @db.DateTime(0)
  talbum_played      DateTime? @default(dbgenerated("('2002-01-01 00:00:01')")) @db.DateTime(0)
  originalmetadata   Int       @default(0)

  @@index([count_played], map: "count_played")
  @@index([date_played, artist_played, title_played, album_played], map: "date_played")
  @@index([album], map: "songs_album")
  @@index([artist], map: "songs_artist")
  @@index([associated_artists], map: "songs_associated_artists")
  @@index([id_subcat], map: "songs_id_subcat")
  @@index([title], map: "songs_title")
  @@index([start_date, end_date, enabled], map: "songs_validtracks")
}

model subcategory {
  ID       Int    @id @default(autoincrement())
  parentid Int
  name     String @db.VarChar(100)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model users {
  ID   Int     @default(autoincrement()) @db.UnsignedInt
  user String  @db.VarChar(100)
  auth String? @db.VarChar(250)
  data String  @db.Text

  @@index([ID], map: "ID")
  @@ignore
}

enum events_enabled {
  True
  False
}

enum playlists_list_swfirst {
  True
  False
}
